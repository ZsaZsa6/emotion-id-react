import React, {Component} from 'react';  
import {connect} from 'react-redux';  
import {bindActionCreators} from 'redux';

class FlashMessage extends Component {
    render() {
        return (
            <div>
                
            </div>

        )
    }
}


export const sendFlashMessage = (message, className) => {

    return {
      type: "FLASH_MESSAGE",
      payload: {
        message,
        className
      }
    }
  };

import React, {Component} from 'react';  
import {connect} from 'react-redux';

class FlashMessageContainer extends Component{
  

  render(){
    const {message, className} = this.props.flashMessage;
    if(!message){
      return null;
    }

    return (
      <div className="row">
        <div 
        className={'col-md-12 alert ' + className} 
        role="alert">
          {message}
        </div>
      </div>
    );
  }
}


const mapStateToProps = ({flashMessage}) => {  
  return {flashMessage};
};

export default connect(mapStateToProps)(FlashMessageContainer);



const initialState = {  
    message: null,
    className: null
  }
const flashMessageReducer = (state = initialState, action) => {  
  switch(action.type){
    case "FLASH_MESSAGE":

      return {
          ...state,
         message: [...state.message, action.message]}
  
    default:
      return state;
  }
};
export default flashMessageReducer